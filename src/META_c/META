name = "csfml"
description = "bindings to the SFML library"
license = "zlib/png"
version = "0.09"
directory = "+csfml"

package "system" (
  description = "system module"
  archive(byte) = "csfml_system.cma"
  archive(native) = "csfml_system.cmxa"
  archive(plugin,native) = "csfml_system.cmxs"
)

package "window" (
  description = "window module"
  requires = "csfml.system"
  exists_if = "csfml_window.cma"
  archive(byte) = "csfml_window.cma"
  archive(native) = "csfml_window.cmxa"
  archive(plugin,native) = "csfml_window.cmxs"
)

package "graphics" (
  description = "graphics module"
  requires = "bigarray csfml.window"
  exists_if = "csfml_graphics.cma"
  archive(byte) = "csfml_graphics.cma"
  archive(native) = "csfml_graphics.cmxa"
  archive(plugin,native) = "csfml_graphics.cmxs"
)

package "audio" (
  description = "audio module"
  requires = "csfml.system"
  exists_if = "csfml_audio.cma"
  archive(byte) = "csfml_audio.cma"
  archive(native) = "csfml_audio.cmxa"
  archive(plugin,native) = "csfml_audio.cmxs"
)

package "network" (
  description = "network module"
  requires = "csfml.system"
  exists_if = "csfml_network.cma"
  archive(byte) = "csfml_network.cma"
  archive(native) = "csfml_network.cmxa"
  archive(plugin,native) = "csfml_network.cmxs"
)

package "all" (
  description = "all SFML modules"
  requires = "csfml.system csfml.window csfml.graphics csfml.audio csfml.network"
)


package "system_oo" (
  description = "OO style interface to the system module"
  requires = "csfml.system"
  exists_if = "sfml_system_oo.cma"
  archive(byte) = "sfml_system_oo.cma"
  archive(native) = "sfml_system_oo.cmxa"
  archive(plugin,native) = "sfml_system_oo.cmxs"
)

package "window_oo" (
  description = "OO style interface to the window module"
  requires = "csfml.window csfml.system_oo"
  exists_if = "sfml_window_oo.cma"
  archive(byte) = "sfml_window_oo.cma"
  archive(native) = "sfml_window_oo.cmxa"
  archive(plugin,native) = "sfml_window_oo.cmxs"
)

package "graphics_oo" (
  description = "OO style interface to the graphics module"
  requires = "bigarray csfml.graphics csfml.window_oo"
  exists_if = "sfml_graphics_oo.cma"
  archive(byte) = "sfml_graphics_oo.cma"
  archive(native) = "sfml_graphics_oo.cmxa"
  archive(plugin,native) = "sfml_graphics_oo.cmxs"
)

package "audio_oo" (
  description = "OO style interface to the audio module"
  requires = "csfml.audio csfml.system_oo"
  exists_if = "sfml_audio_oo.cma"
  archive(byte) = "sfml_audio_oo.cma"
  archive(native) = "sfml_audio_oo.cmxa"
  archive(plugin,native) = "sfml_audio_oo.cmxs"
)

package "network_oo" (
  description = "OO style interface to the network module"
  requires = "csfml.network csfml.system_oo"
  exists_if = "sfml_network_oo.cma"
  archive(byte) = "sfml_network_oo.cma"
  archive(native) = "sfml_network_oo.cmxa"
  archive(plugin,native) = "sfml_network_oo.cmxs"
)

package "all_oo" (
  description = "All OO style interfaces to all SFML modules"
  requires = "csfml.system_oo csfml.window_oo csfml.graphics_oo csfml.audio_oo csfml.network_oo"
)

